/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.ortools.linearsolver;

import java.lang.reflect.*;

public class MPConstraint {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected MPConstraint(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MPConstraint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mainJNI.delete_MPConstraint(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public String name() {
    return mainJNI.MPConstraint_name(swigCPtr, this);
  }

  public void setCoefficient(MPVariable var, double coeff) {
    mainJNI.MPConstraint_setCoefficient(swigCPtr, this, MPVariable.getCPtr(var), var, coeff);
  }

  public double getCoefficient(MPVariable var) {
    return mainJNI.MPConstraint_getCoefficient(swigCPtr, this, MPVariable.getCPtr(var), var);
  }

  public double lb() {
    return mainJNI.MPConstraint_lb(swigCPtr, this);
  }

  public double ub() {
    return mainJNI.MPConstraint_ub(swigCPtr, this);
  }

  public void setLb(double lb) {
    mainJNI.MPConstraint_setLb(swigCPtr, this, lb);
  }

  public void setUb(double ub) {
    mainJNI.MPConstraint_setUb(swigCPtr, this, ub);
  }

  public void setBounds(double lb, double ub) {
    mainJNI.MPConstraint_setBounds(swigCPtr, this, lb, ub);
  }

  public boolean isLazy() {
    return mainJNI.MPConstraint_isLazy(swigCPtr, this);
  }

  public void setIsLazy(boolean laziness) {
    mainJNI.MPConstraint_setIsLazy(swigCPtr, this, laziness);
  }

  public int index() {
    return mainJNI.MPConstraint_index(swigCPtr, this);
  }

  public double dualValue() {
    return mainJNI.MPConstraint_dualValue(swigCPtr, this);
  }

  public MPSolver.BasisStatus basisStatus() {
    return MPSolver.BasisStatus.swigToEnum(mainJNI.MPConstraint_basisStatus(swigCPtr, this));
  }

}
