/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.ortools.constraintsolver;

public class Demon extends BaseObject {
  private transient long swigCPtr;

  protected Demon(long cPtr, boolean cMemoryOwn) {
    super(mainJNI.Demon_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Demon obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mainJNI.delete_Demon(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void run(Solver s) {
    mainJNI.Demon_run(swigCPtr, this, Solver.getCPtr(s), s);
  }

  public int priority() {
    return mainJNI.Demon_priority(swigCPtr, this);
  }

  public String toString() {
    return mainJNI.Demon_toString(swigCPtr, this);
  }

  public void inhibit(Solver s) {
    mainJNI.Demon_inhibit(swigCPtr, this, Solver.getCPtr(s), s);
  }

  public void desinhibit(Solver s) {
    mainJNI.Demon_desinhibit(swigCPtr, this, Solver.getCPtr(s), s);
  }

}
