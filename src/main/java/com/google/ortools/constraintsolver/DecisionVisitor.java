/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.ortools.constraintsolver;

public class DecisionVisitor extends BaseObject {
  private transient long swigCPtr;

  protected DecisionVisitor(long cPtr, boolean cMemoryOwn) {
    super(mainJNI.DecisionVisitor_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DecisionVisitor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mainJNI.delete_DecisionVisitor(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    mainJNI.DecisionVisitor_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    mainJNI.DecisionVisitor_change_ownership(this, swigCPtr, true);
  }

  public DecisionVisitor() {
    this(mainJNI.new_DecisionVisitor(), true);
    mainJNI.DecisionVisitor_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void visitSetVariableValue(IntVar var, long value) {
    if (getClass() == DecisionVisitor.class) mainJNI.DecisionVisitor_visitSetVariableValue(swigCPtr, this, IntVar.getCPtr(var), var, value); else mainJNI.DecisionVisitor_visitSetVariableValueSwigExplicitDecisionVisitor(swigCPtr, this, IntVar.getCPtr(var), var, value);
  }

  public void visitSplitVariableDomain(IntVar var, long value, boolean start_with_lower_half) {
    if (getClass() == DecisionVisitor.class) mainJNI.DecisionVisitor_visitSplitVariableDomain(swigCPtr, this, IntVar.getCPtr(var), var, value, start_with_lower_half); else mainJNI.DecisionVisitor_visitSplitVariableDomainSwigExplicitDecisionVisitor(swigCPtr, this, IntVar.getCPtr(var), var, value, start_with_lower_half);
  }

  public void visitScheduleOrPostpone(IntervalVar var, long est) {
    if (getClass() == DecisionVisitor.class) mainJNI.DecisionVisitor_visitScheduleOrPostpone(swigCPtr, this, IntervalVar.getCPtr(var), var, est); else mainJNI.DecisionVisitor_visitScheduleOrPostponeSwigExplicitDecisionVisitor(swigCPtr, this, IntervalVar.getCPtr(var), var, est);
  }

  public void visitScheduleOrExpedite(IntervalVar var, long est) {
    if (getClass() == DecisionVisitor.class) mainJNI.DecisionVisitor_visitScheduleOrExpedite(swigCPtr, this, IntervalVar.getCPtr(var), var, est); else mainJNI.DecisionVisitor_visitScheduleOrExpediteSwigExplicitDecisionVisitor(swigCPtr, this, IntervalVar.getCPtr(var), var, est);
  }

  public void visitRankFirstInterval(SequenceVar sequence, int index) {
    if (getClass() == DecisionVisitor.class) mainJNI.DecisionVisitor_visitRankFirstInterval(swigCPtr, this, SequenceVar.getCPtr(sequence), sequence, index); else mainJNI.DecisionVisitor_visitRankFirstIntervalSwigExplicitDecisionVisitor(swigCPtr, this, SequenceVar.getCPtr(sequence), sequence, index);
  }

  public void visitRankLastInterval(SequenceVar sequence, int index) {
    if (getClass() == DecisionVisitor.class) mainJNI.DecisionVisitor_visitRankLastInterval(swigCPtr, this, SequenceVar.getCPtr(sequence), sequence, index); else mainJNI.DecisionVisitor_visitRankLastIntervalSwigExplicitDecisionVisitor(swigCPtr, this, SequenceVar.getCPtr(sequence), sequence, index);
  }

  public void visitUnknownDecision() {
    if (getClass() == DecisionVisitor.class) mainJNI.DecisionVisitor_visitUnknownDecision(swigCPtr, this); else mainJNI.DecisionVisitor_visitUnknownDecisionSwigExplicitDecisionVisitor(swigCPtr, this);
  }

}
