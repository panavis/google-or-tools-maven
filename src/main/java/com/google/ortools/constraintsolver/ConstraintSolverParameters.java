// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/constraint_solver/solver_parameters.proto

package com.google.ortools.constraintsolver;

/**
 * <pre>
 * Solver parameters.
 * </pre>
 *
 * Protobuf type {@code operations_research.ConstraintSolverParameters}
 */
public final class ConstraintSolverParameters extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:operations_research.ConstraintSolverParameters)
    ConstraintSolverParametersOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ConstraintSolverParameters.newBuilder() to construct.
  private ConstraintSolverParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConstraintSolverParameters() {
    compressTrail_ = 0;
    profileFile_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ConstraintSolverParameters();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ConstraintSolverParameters(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            compressTrail_ = rawValue;
            break;
          }
          case 16: {

            trailBlockSize_ = input.readInt32();
            break;
          }
          case 24: {

            arraySplitSize_ = input.readInt32();
            break;
          }
          case 32: {

            storeNames_ = input.readBool();
            break;
          }
          case 40: {

            nameCastVariables_ = input.readBool();
            break;
          }
          case 48: {

            nameAllVariables_ = input.readBool();
            break;
          }
          case 56: {

            profilePropagation_ = input.readBool();
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            profileFile_ = s;
            break;
          }
          case 72: {

            tracePropagation_ = input.readBool();
            break;
          }
          case 80: {

            traceSearch_ = input.readBool();
            break;
          }
          case 88: {

            printModel_ = input.readBool();
            break;
          }
          case 96: {

            printModelStats_ = input.readBool();
            break;
          }
          case 104: {

            printAddedConstraints_ = input.readBool();
            break;
          }
          case 120: {

            disableSolve_ = input.readBool();
            break;
          }
          case 128: {

            profileLocalSearch_ = input.readBool();
            break;
          }
          case 136: {

            printLocalSearchProfile_ = input.readBool();
            break;
          }
          case 808: {

            useSmallTable_ = input.readBool();
            break;
          }
          case 840: {

            useCumulativeEdgeFinder_ = input.readBool();
            break;
          }
          case 848: {

            useCumulativeTimeTable_ = input.readBool();
            break;
          }
          case 856: {

            useSequenceHighDemandTasks_ = input.readBool();
            break;
          }
          case 864: {

            useAllPossibleDisjunctions_ = input.readBool();
            break;
          }
          case 872: {

            maxEdgeFinderSize_ = input.readInt32();
            break;
          }
          case 880: {

            diffnUseCumulative_ = input.readBool();
            break;
          }
          case 888: {

            useElementRmq_ = input.readBool();
            break;
          }
          case 896: {

            useCumulativeTimeTableSync_ = input.readBool();
            break;
          }
          case 904: {

            skipLocallyOptimalPaths_ = input.readBool();
            break;
          }
          case 912: {

            checkSolutionPeriod_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ortools.constraintsolver.SolverParameters.internal_static_operations_research_ConstraintSolverParameters_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ortools.constraintsolver.SolverParameters.internal_static_operations_research_ConstraintSolverParameters_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ortools.constraintsolver.ConstraintSolverParameters.class, com.google.ortools.constraintsolver.ConstraintSolverParameters.Builder.class);
  }

  /**
   * <pre>
   * Internal parameters of the solver.
   * </pre>
   *
   * Protobuf enum {@code operations_research.ConstraintSolverParameters.TrailCompression}
   */
  public enum TrailCompression
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NO_COMPRESSION = 0;</code>
     */
    NO_COMPRESSION(0),
    /**
     * <code>COMPRESS_WITH_ZLIB = 1;</code>
     */
    COMPRESS_WITH_ZLIB(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NO_COMPRESSION = 0;</code>
     */
    public static final int NO_COMPRESSION_VALUE = 0;
    /**
     * <code>COMPRESS_WITH_ZLIB = 1;</code>
     */
    public static final int COMPRESS_WITH_ZLIB_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrailCompression valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrailCompression forNumber(int value) {
      switch (value) {
        case 0: return NO_COMPRESSION;
        case 1: return COMPRESS_WITH_ZLIB;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrailCompression>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrailCompression> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrailCompression>() {
            public TrailCompression findValueByNumber(int number) {
              return TrailCompression.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.ortools.constraintsolver.ConstraintSolverParameters.getDescriptor().getEnumTypes().get(0);
    }

    private static final TrailCompression[] VALUES = values();

    public static TrailCompression valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrailCompression(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:operations_research.ConstraintSolverParameters.TrailCompression)
  }

  public static final int COMPRESS_TRAIL_FIELD_NUMBER = 1;
  private int compressTrail_;
  /**
   * <pre>
   * This parameter indicates if the solver should compress the trail
   * during the search. No compression means that the solver will be faster,
   * but will use more memory.
   * </pre>
   *
   * <code>.operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;</code>
   * @return The enum numeric value on the wire for compressTrail.
   */
  @java.lang.Override public int getCompressTrailValue() {
    return compressTrail_;
  }
  /**
   * <pre>
   * This parameter indicates if the solver should compress the trail
   * during the search. No compression means that the solver will be faster,
   * but will use more memory.
   * </pre>
   *
   * <code>.operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;</code>
   * @return The compressTrail.
   */
  @java.lang.Override public com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression getCompressTrail() {
    @SuppressWarnings("deprecation")
    com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression result = com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression.valueOf(compressTrail_);
    return result == null ? com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression.UNRECOGNIZED : result;
  }

  public static final int TRAIL_BLOCK_SIZE_FIELD_NUMBER = 2;
  private int trailBlockSize_;
  /**
   * <pre>
   * This parameter indicates the default size of a block of the trail.
   * Compression applies at the block level.
   * </pre>
   *
   * <code>int32 trail_block_size = 2;</code>
   * @return The trailBlockSize.
   */
  @java.lang.Override
  public int getTrailBlockSize() {
    return trailBlockSize_;
  }

  public static final int ARRAY_SPLIT_SIZE_FIELD_NUMBER = 3;
  private int arraySplitSize_;
  /**
   * <pre>
   * When a sum/min/max operation is applied on a large array, this
   * array is recursively split into blocks of size 'array_split_size'.
   * </pre>
   *
   * <code>int32 array_split_size = 3;</code>
   * @return The arraySplitSize.
   */
  @java.lang.Override
  public int getArraySplitSize() {
    return arraySplitSize_;
  }

  public static final int STORE_NAMES_FIELD_NUMBER = 4;
  private boolean storeNames_;
  /**
   * <pre>
   * This parameters indicates if the solver should store the names of
   * the objets it manages.
   * </pre>
   *
   * <code>bool store_names = 4;</code>
   * @return The storeNames.
   */
  @java.lang.Override
  public boolean getStoreNames() {
    return storeNames_;
  }

  public static final int NAME_CAST_VARIABLES_FIELD_NUMBER = 5;
  private boolean nameCastVariables_;
  /**
   * <pre>
   * Create names for cast variables.
   * </pre>
   *
   * <code>bool name_cast_variables = 5;</code>
   * @return The nameCastVariables.
   */
  @java.lang.Override
  public boolean getNameCastVariables() {
    return nameCastVariables_;
  }

  public static final int NAME_ALL_VARIABLES_FIELD_NUMBER = 6;
  private boolean nameAllVariables_;
  /**
   * <pre>
   * Should anonymous variables be given a name.
   * </pre>
   *
   * <code>bool name_all_variables = 6;</code>
   * @return The nameAllVariables.
   */
  @java.lang.Override
  public boolean getNameAllVariables() {
    return nameAllVariables_;
  }

  public static final int PROFILE_PROPAGATION_FIELD_NUMBER = 7;
  private boolean profilePropagation_;
  /**
   * <pre>
   * Activate propagation profiling.
   * </pre>
   *
   * <code>bool profile_propagation = 7;</code>
   * @return The profilePropagation.
   */
  @java.lang.Override
  public boolean getProfilePropagation() {
    return profilePropagation_;
  }

  public static final int PROFILE_FILE_FIELD_NUMBER = 8;
  private volatile java.lang.Object profileFile_;
  /**
   * <pre>
   * Export propagation profiling data to file.
   * </pre>
   *
   * <code>string profile_file = 8;</code>
   * @return The profileFile.
   */
  @java.lang.Override
  public java.lang.String getProfileFile() {
    java.lang.Object ref = profileFile_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      profileFile_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Export propagation profiling data to file.
   * </pre>
   *
   * <code>string profile_file = 8;</code>
   * @return The bytes for profileFile.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProfileFileBytes() {
    java.lang.Object ref = profileFile_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      profileFile_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROFILE_LOCAL_SEARCH_FIELD_NUMBER = 16;
  private boolean profileLocalSearch_;
  /**
   * <pre>
   * Activate local search profiling.
   * </pre>
   *
   * <code>bool profile_local_search = 16;</code>
   * @return The profileLocalSearch.
   */
  @java.lang.Override
  public boolean getProfileLocalSearch() {
    return profileLocalSearch_;
  }

  public static final int PRINT_LOCAL_SEARCH_PROFILE_FIELD_NUMBER = 17;
  private boolean printLocalSearchProfile_;
  /**
   * <pre>
   * Print local search profiling data after solving.
   * </pre>
   *
   * <code>bool print_local_search_profile = 17;</code>
   * @return The printLocalSearchProfile.
   */
  @java.lang.Override
  public boolean getPrintLocalSearchProfile() {
    return printLocalSearchProfile_;
  }

  public static final int TRACE_PROPAGATION_FIELD_NUMBER = 9;
  private boolean tracePropagation_;
  /**
   * <pre>
   * Activate propagate tracing.
   * </pre>
   *
   * <code>bool trace_propagation = 9;</code>
   * @return The tracePropagation.
   */
  @java.lang.Override
  public boolean getTracePropagation() {
    return tracePropagation_;
  }

  public static final int TRACE_SEARCH_FIELD_NUMBER = 10;
  private boolean traceSearch_;
  /**
   * <pre>
   * Trace search.
   * </pre>
   *
   * <code>bool trace_search = 10;</code>
   * @return The traceSearch.
   */
  @java.lang.Override
  public boolean getTraceSearch() {
    return traceSearch_;
  }

  public static final int PRINT_MODEL_FIELD_NUMBER = 11;
  private boolean printModel_;
  /**
   * <pre>
   * Print the model before solving.
   * </pre>
   *
   * <code>bool print_model = 11;</code>
   * @return The printModel.
   */
  @java.lang.Override
  public boolean getPrintModel() {
    return printModel_;
  }

  public static final int PRINT_MODEL_STATS_FIELD_NUMBER = 12;
  private boolean printModelStats_;
  /**
   * <pre>
   * Print model statistics before solving.
   * </pre>
   *
   * <code>bool print_model_stats = 12;</code>
   * @return The printModelStats.
   */
  @java.lang.Override
  public boolean getPrintModelStats() {
    return printModelStats_;
  }

  public static final int PRINT_ADDED_CONSTRAINTS_FIELD_NUMBER = 13;
  private boolean printAddedConstraints_;
  /**
   * <pre>
   * Print added constraints.
   * </pre>
   *
   * <code>bool print_added_constraints = 13;</code>
   * @return The printAddedConstraints.
   */
  @java.lang.Override
  public boolean getPrintAddedConstraints() {
    return printAddedConstraints_;
  }

  public static final int DISABLE_SOLVE_FIELD_NUMBER = 15;
  private boolean disableSolve_;
  /**
   * <code>bool disable_solve = 15;</code>
   * @return The disableSolve.
   */
  @java.lang.Override
  public boolean getDisableSolve() {
    return disableSolve_;
  }

  public static final int USE_SMALL_TABLE_FIELD_NUMBER = 101;
  private boolean useSmallTable_;
  /**
   * <pre>
   * Control the implementation of the table constraint.
   * </pre>
   *
   * <code>bool use_small_table = 101;</code>
   * @return The useSmallTable.
   */
  @java.lang.Override
  public boolean getUseSmallTable() {
    return useSmallTable_;
  }

  public static final int USE_CUMULATIVE_EDGE_FINDER_FIELD_NUMBER = 105;
  private boolean useCumulativeEdgeFinder_;
  /**
   * <pre>
   * Control the propagation of the cumulative constraint.
   * </pre>
   *
   * <code>bool use_cumulative_edge_finder = 105;</code>
   * @return The useCumulativeEdgeFinder.
   */
  @java.lang.Override
  public boolean getUseCumulativeEdgeFinder() {
    return useCumulativeEdgeFinder_;
  }

  public static final int USE_CUMULATIVE_TIME_TABLE_FIELD_NUMBER = 106;
  private boolean useCumulativeTimeTable_;
  /**
   * <code>bool use_cumulative_time_table = 106;</code>
   * @return The useCumulativeTimeTable.
   */
  @java.lang.Override
  public boolean getUseCumulativeTimeTable() {
    return useCumulativeTimeTable_;
  }

  public static final int USE_CUMULATIVE_TIME_TABLE_SYNC_FIELD_NUMBER = 112;
  private boolean useCumulativeTimeTableSync_;
  /**
   * <code>bool use_cumulative_time_table_sync = 112;</code>
   * @return The useCumulativeTimeTableSync.
   */
  @java.lang.Override
  public boolean getUseCumulativeTimeTableSync() {
    return useCumulativeTimeTableSync_;
  }

  public static final int USE_SEQUENCE_HIGH_DEMAND_TASKS_FIELD_NUMBER = 107;
  private boolean useSequenceHighDemandTasks_;
  /**
   * <code>bool use_sequence_high_demand_tasks = 107;</code>
   * @return The useSequenceHighDemandTasks.
   */
  @java.lang.Override
  public boolean getUseSequenceHighDemandTasks() {
    return useSequenceHighDemandTasks_;
  }

  public static final int USE_ALL_POSSIBLE_DISJUNCTIONS_FIELD_NUMBER = 108;
  private boolean useAllPossibleDisjunctions_;
  /**
   * <code>bool use_all_possible_disjunctions = 108;</code>
   * @return The useAllPossibleDisjunctions.
   */
  @java.lang.Override
  public boolean getUseAllPossibleDisjunctions() {
    return useAllPossibleDisjunctions_;
  }

  public static final int MAX_EDGE_FINDER_SIZE_FIELD_NUMBER = 109;
  private int maxEdgeFinderSize_;
  /**
   * <code>int32 max_edge_finder_size = 109;</code>
   * @return The maxEdgeFinderSize.
   */
  @java.lang.Override
  public int getMaxEdgeFinderSize() {
    return maxEdgeFinderSize_;
  }

  public static final int DIFFN_USE_CUMULATIVE_FIELD_NUMBER = 110;
  private boolean diffnUseCumulative_;
  /**
   * <pre>
   * Control the propagation of the diffn constraint.
   * </pre>
   *
   * <code>bool diffn_use_cumulative = 110;</code>
   * @return The diffnUseCumulative.
   */
  @java.lang.Override
  public boolean getDiffnUseCumulative() {
    return diffnUseCumulative_;
  }

  public static final int USE_ELEMENT_RMQ_FIELD_NUMBER = 111;
  private boolean useElementRmq_;
  /**
   * <pre>
   * Control the implementation of the element constraint.
   * </pre>
   *
   * <code>bool use_element_rmq = 111;</code>
   * @return The useElementRmq.
   */
  @java.lang.Override
  public boolean getUseElementRmq() {
    return useElementRmq_;
  }

  public static final int SKIP_LOCALLY_OPTIMAL_PATHS_FIELD_NUMBER = 113;
  private boolean skipLocallyOptimalPaths_;
  /**
   * <pre>
   * Skip locally optimal pairs of paths in PathOperators. Setting this
   * parameter to true might skip valid neighbors if there are constraints
   * linking paths together (such as precedences). In any other case this
   * should only speed up the search without omitting any neighbors.
   * </pre>
   *
   * <code>bool skip_locally_optimal_paths = 113;</code>
   * @return The skipLocallyOptimalPaths.
   */
  @java.lang.Override
  public boolean getSkipLocallyOptimalPaths() {
    return skipLocallyOptimalPaths_;
  }

  public static final int CHECK_SOLUTION_PERIOD_FIELD_NUMBER = 114;
  private int checkSolutionPeriod_;
  /**
   * <pre>
   * Control the behavior of local search.
   * </pre>
   *
   * <code>int32 check_solution_period = 114;</code>
   * @return The checkSolutionPeriod.
   */
  @java.lang.Override
  public int getCheckSolutionPeriod() {
    return checkSolutionPeriod_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (compressTrail_ != com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression.NO_COMPRESSION.getNumber()) {
      output.writeEnum(1, compressTrail_);
    }
    if (trailBlockSize_ != 0) {
      output.writeInt32(2, trailBlockSize_);
    }
    if (arraySplitSize_ != 0) {
      output.writeInt32(3, arraySplitSize_);
    }
    if (storeNames_ != false) {
      output.writeBool(4, storeNames_);
    }
    if (nameCastVariables_ != false) {
      output.writeBool(5, nameCastVariables_);
    }
    if (nameAllVariables_ != false) {
      output.writeBool(6, nameAllVariables_);
    }
    if (profilePropagation_ != false) {
      output.writeBool(7, profilePropagation_);
    }
    if (!getProfileFileBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, profileFile_);
    }
    if (tracePropagation_ != false) {
      output.writeBool(9, tracePropagation_);
    }
    if (traceSearch_ != false) {
      output.writeBool(10, traceSearch_);
    }
    if (printModel_ != false) {
      output.writeBool(11, printModel_);
    }
    if (printModelStats_ != false) {
      output.writeBool(12, printModelStats_);
    }
    if (printAddedConstraints_ != false) {
      output.writeBool(13, printAddedConstraints_);
    }
    if (disableSolve_ != false) {
      output.writeBool(15, disableSolve_);
    }
    if (profileLocalSearch_ != false) {
      output.writeBool(16, profileLocalSearch_);
    }
    if (printLocalSearchProfile_ != false) {
      output.writeBool(17, printLocalSearchProfile_);
    }
    if (useSmallTable_ != false) {
      output.writeBool(101, useSmallTable_);
    }
    if (useCumulativeEdgeFinder_ != false) {
      output.writeBool(105, useCumulativeEdgeFinder_);
    }
    if (useCumulativeTimeTable_ != false) {
      output.writeBool(106, useCumulativeTimeTable_);
    }
    if (useSequenceHighDemandTasks_ != false) {
      output.writeBool(107, useSequenceHighDemandTasks_);
    }
    if (useAllPossibleDisjunctions_ != false) {
      output.writeBool(108, useAllPossibleDisjunctions_);
    }
    if (maxEdgeFinderSize_ != 0) {
      output.writeInt32(109, maxEdgeFinderSize_);
    }
    if (diffnUseCumulative_ != false) {
      output.writeBool(110, diffnUseCumulative_);
    }
    if (useElementRmq_ != false) {
      output.writeBool(111, useElementRmq_);
    }
    if (useCumulativeTimeTableSync_ != false) {
      output.writeBool(112, useCumulativeTimeTableSync_);
    }
    if (skipLocallyOptimalPaths_ != false) {
      output.writeBool(113, skipLocallyOptimalPaths_);
    }
    if (checkSolutionPeriod_ != 0) {
      output.writeInt32(114, checkSolutionPeriod_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (compressTrail_ != com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression.NO_COMPRESSION.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, compressTrail_);
    }
    if (trailBlockSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, trailBlockSize_);
    }
    if (arraySplitSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, arraySplitSize_);
    }
    if (storeNames_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, storeNames_);
    }
    if (nameCastVariables_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, nameCastVariables_);
    }
    if (nameAllVariables_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, nameAllVariables_);
    }
    if (profilePropagation_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, profilePropagation_);
    }
    if (!getProfileFileBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, profileFile_);
    }
    if (tracePropagation_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, tracePropagation_);
    }
    if (traceSearch_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, traceSearch_);
    }
    if (printModel_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, printModel_);
    }
    if (printModelStats_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(12, printModelStats_);
    }
    if (printAddedConstraints_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(13, printAddedConstraints_);
    }
    if (disableSolve_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(15, disableSolve_);
    }
    if (profileLocalSearch_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(16, profileLocalSearch_);
    }
    if (printLocalSearchProfile_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(17, printLocalSearchProfile_);
    }
    if (useSmallTable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(101, useSmallTable_);
    }
    if (useCumulativeEdgeFinder_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(105, useCumulativeEdgeFinder_);
    }
    if (useCumulativeTimeTable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(106, useCumulativeTimeTable_);
    }
    if (useSequenceHighDemandTasks_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(107, useSequenceHighDemandTasks_);
    }
    if (useAllPossibleDisjunctions_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(108, useAllPossibleDisjunctions_);
    }
    if (maxEdgeFinderSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(109, maxEdgeFinderSize_);
    }
    if (diffnUseCumulative_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(110, diffnUseCumulative_);
    }
    if (useElementRmq_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(111, useElementRmq_);
    }
    if (useCumulativeTimeTableSync_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(112, useCumulativeTimeTableSync_);
    }
    if (skipLocallyOptimalPaths_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(113, skipLocallyOptimalPaths_);
    }
    if (checkSolutionPeriod_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(114, checkSolutionPeriod_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ortools.constraintsolver.ConstraintSolverParameters)) {
      return super.equals(obj);
    }
    com.google.ortools.constraintsolver.ConstraintSolverParameters other = (com.google.ortools.constraintsolver.ConstraintSolverParameters) obj;

    if (compressTrail_ != other.compressTrail_) return false;
    if (getTrailBlockSize()
        != other.getTrailBlockSize()) return false;
    if (getArraySplitSize()
        != other.getArraySplitSize()) return false;
    if (getStoreNames()
        != other.getStoreNames()) return false;
    if (getNameCastVariables()
        != other.getNameCastVariables()) return false;
    if (getNameAllVariables()
        != other.getNameAllVariables()) return false;
    if (getProfilePropagation()
        != other.getProfilePropagation()) return false;
    if (!getProfileFile()
        .equals(other.getProfileFile())) return false;
    if (getProfileLocalSearch()
        != other.getProfileLocalSearch()) return false;
    if (getPrintLocalSearchProfile()
        != other.getPrintLocalSearchProfile()) return false;
    if (getTracePropagation()
        != other.getTracePropagation()) return false;
    if (getTraceSearch()
        != other.getTraceSearch()) return false;
    if (getPrintModel()
        != other.getPrintModel()) return false;
    if (getPrintModelStats()
        != other.getPrintModelStats()) return false;
    if (getPrintAddedConstraints()
        != other.getPrintAddedConstraints()) return false;
    if (getDisableSolve()
        != other.getDisableSolve()) return false;
    if (getUseSmallTable()
        != other.getUseSmallTable()) return false;
    if (getUseCumulativeEdgeFinder()
        != other.getUseCumulativeEdgeFinder()) return false;
    if (getUseCumulativeTimeTable()
        != other.getUseCumulativeTimeTable()) return false;
    if (getUseCumulativeTimeTableSync()
        != other.getUseCumulativeTimeTableSync()) return false;
    if (getUseSequenceHighDemandTasks()
        != other.getUseSequenceHighDemandTasks()) return false;
    if (getUseAllPossibleDisjunctions()
        != other.getUseAllPossibleDisjunctions()) return false;
    if (getMaxEdgeFinderSize()
        != other.getMaxEdgeFinderSize()) return false;
    if (getDiffnUseCumulative()
        != other.getDiffnUseCumulative()) return false;
    if (getUseElementRmq()
        != other.getUseElementRmq()) return false;
    if (getSkipLocallyOptimalPaths()
        != other.getSkipLocallyOptimalPaths()) return false;
    if (getCheckSolutionPeriod()
        != other.getCheckSolutionPeriod()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COMPRESS_TRAIL_FIELD_NUMBER;
    hash = (53 * hash) + compressTrail_;
    hash = (37 * hash) + TRAIL_BLOCK_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getTrailBlockSize();
    hash = (37 * hash) + ARRAY_SPLIT_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getArraySplitSize();
    hash = (37 * hash) + STORE_NAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getStoreNames());
    hash = (37 * hash) + NAME_CAST_VARIABLES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNameCastVariables());
    hash = (37 * hash) + NAME_ALL_VARIABLES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNameAllVariables());
    hash = (37 * hash) + PROFILE_PROPAGATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getProfilePropagation());
    hash = (37 * hash) + PROFILE_FILE_FIELD_NUMBER;
    hash = (53 * hash) + getProfileFile().hashCode();
    hash = (37 * hash) + PROFILE_LOCAL_SEARCH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getProfileLocalSearch());
    hash = (37 * hash) + PRINT_LOCAL_SEARCH_PROFILE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPrintLocalSearchProfile());
    hash = (37 * hash) + TRACE_PROPAGATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getTracePropagation());
    hash = (37 * hash) + TRACE_SEARCH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getTraceSearch());
    hash = (37 * hash) + PRINT_MODEL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPrintModel());
    hash = (37 * hash) + PRINT_MODEL_STATS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPrintModelStats());
    hash = (37 * hash) + PRINT_ADDED_CONSTRAINTS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPrintAddedConstraints());
    hash = (37 * hash) + DISABLE_SOLVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDisableSolve());
    hash = (37 * hash) + USE_SMALL_TABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseSmallTable());
    hash = (37 * hash) + USE_CUMULATIVE_EDGE_FINDER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseCumulativeEdgeFinder());
    hash = (37 * hash) + USE_CUMULATIVE_TIME_TABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseCumulativeTimeTable());
    hash = (37 * hash) + USE_CUMULATIVE_TIME_TABLE_SYNC_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseCumulativeTimeTableSync());
    hash = (37 * hash) + USE_SEQUENCE_HIGH_DEMAND_TASKS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseSequenceHighDemandTasks());
    hash = (37 * hash) + USE_ALL_POSSIBLE_DISJUNCTIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseAllPossibleDisjunctions());
    hash = (37 * hash) + MAX_EDGE_FINDER_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getMaxEdgeFinderSize();
    hash = (37 * hash) + DIFFN_USE_CUMULATIVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDiffnUseCumulative());
    hash = (37 * hash) + USE_ELEMENT_RMQ_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseElementRmq());
    hash = (37 * hash) + SKIP_LOCALLY_OPTIMAL_PATHS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSkipLocallyOptimalPaths());
    hash = (37 * hash) + CHECK_SOLUTION_PERIOD_FIELD_NUMBER;
    hash = (53 * hash) + getCheckSolutionPeriod();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ortools.constraintsolver.ConstraintSolverParameters parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ortools.constraintsolver.ConstraintSolverParameters prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Solver parameters.
   * </pre>
   *
   * Protobuf type {@code operations_research.ConstraintSolverParameters}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:operations_research.ConstraintSolverParameters)
      com.google.ortools.constraintsolver.ConstraintSolverParametersOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ortools.constraintsolver.SolverParameters.internal_static_operations_research_ConstraintSolverParameters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ortools.constraintsolver.SolverParameters.internal_static_operations_research_ConstraintSolverParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ortools.constraintsolver.ConstraintSolverParameters.class, com.google.ortools.constraintsolver.ConstraintSolverParameters.Builder.class);
    }

    // Construct using com.google.ortools.constraintsolver.ConstraintSolverParameters.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      compressTrail_ = 0;

      trailBlockSize_ = 0;

      arraySplitSize_ = 0;

      storeNames_ = false;

      nameCastVariables_ = false;

      nameAllVariables_ = false;

      profilePropagation_ = false;

      profileFile_ = "";

      profileLocalSearch_ = false;

      printLocalSearchProfile_ = false;

      tracePropagation_ = false;

      traceSearch_ = false;

      printModel_ = false;

      printModelStats_ = false;

      printAddedConstraints_ = false;

      disableSolve_ = false;

      useSmallTable_ = false;

      useCumulativeEdgeFinder_ = false;

      useCumulativeTimeTable_ = false;

      useCumulativeTimeTableSync_ = false;

      useSequenceHighDemandTasks_ = false;

      useAllPossibleDisjunctions_ = false;

      maxEdgeFinderSize_ = 0;

      diffnUseCumulative_ = false;

      useElementRmq_ = false;

      skipLocallyOptimalPaths_ = false;

      checkSolutionPeriod_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ortools.constraintsolver.SolverParameters.internal_static_operations_research_ConstraintSolverParameters_descriptor;
    }

    @java.lang.Override
    public com.google.ortools.constraintsolver.ConstraintSolverParameters getDefaultInstanceForType() {
      return com.google.ortools.constraintsolver.ConstraintSolverParameters.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ortools.constraintsolver.ConstraintSolverParameters build() {
      com.google.ortools.constraintsolver.ConstraintSolverParameters result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ortools.constraintsolver.ConstraintSolverParameters buildPartial() {
      com.google.ortools.constraintsolver.ConstraintSolverParameters result = new com.google.ortools.constraintsolver.ConstraintSolverParameters(this);
      result.compressTrail_ = compressTrail_;
      result.trailBlockSize_ = trailBlockSize_;
      result.arraySplitSize_ = arraySplitSize_;
      result.storeNames_ = storeNames_;
      result.nameCastVariables_ = nameCastVariables_;
      result.nameAllVariables_ = nameAllVariables_;
      result.profilePropagation_ = profilePropagation_;
      result.profileFile_ = profileFile_;
      result.profileLocalSearch_ = profileLocalSearch_;
      result.printLocalSearchProfile_ = printLocalSearchProfile_;
      result.tracePropagation_ = tracePropagation_;
      result.traceSearch_ = traceSearch_;
      result.printModel_ = printModel_;
      result.printModelStats_ = printModelStats_;
      result.printAddedConstraints_ = printAddedConstraints_;
      result.disableSolve_ = disableSolve_;
      result.useSmallTable_ = useSmallTable_;
      result.useCumulativeEdgeFinder_ = useCumulativeEdgeFinder_;
      result.useCumulativeTimeTable_ = useCumulativeTimeTable_;
      result.useCumulativeTimeTableSync_ = useCumulativeTimeTableSync_;
      result.useSequenceHighDemandTasks_ = useSequenceHighDemandTasks_;
      result.useAllPossibleDisjunctions_ = useAllPossibleDisjunctions_;
      result.maxEdgeFinderSize_ = maxEdgeFinderSize_;
      result.diffnUseCumulative_ = diffnUseCumulative_;
      result.useElementRmq_ = useElementRmq_;
      result.skipLocallyOptimalPaths_ = skipLocallyOptimalPaths_;
      result.checkSolutionPeriod_ = checkSolutionPeriod_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ortools.constraintsolver.ConstraintSolverParameters) {
        return mergeFrom((com.google.ortools.constraintsolver.ConstraintSolverParameters)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ortools.constraintsolver.ConstraintSolverParameters other) {
      if (other == com.google.ortools.constraintsolver.ConstraintSolverParameters.getDefaultInstance()) return this;
      if (other.compressTrail_ != 0) {
        setCompressTrailValue(other.getCompressTrailValue());
      }
      if (other.getTrailBlockSize() != 0) {
        setTrailBlockSize(other.getTrailBlockSize());
      }
      if (other.getArraySplitSize() != 0) {
        setArraySplitSize(other.getArraySplitSize());
      }
      if (other.getStoreNames() != false) {
        setStoreNames(other.getStoreNames());
      }
      if (other.getNameCastVariables() != false) {
        setNameCastVariables(other.getNameCastVariables());
      }
      if (other.getNameAllVariables() != false) {
        setNameAllVariables(other.getNameAllVariables());
      }
      if (other.getProfilePropagation() != false) {
        setProfilePropagation(other.getProfilePropagation());
      }
      if (!other.getProfileFile().isEmpty()) {
        profileFile_ = other.profileFile_;
        onChanged();
      }
      if (other.getProfileLocalSearch() != false) {
        setProfileLocalSearch(other.getProfileLocalSearch());
      }
      if (other.getPrintLocalSearchProfile() != false) {
        setPrintLocalSearchProfile(other.getPrintLocalSearchProfile());
      }
      if (other.getTracePropagation() != false) {
        setTracePropagation(other.getTracePropagation());
      }
      if (other.getTraceSearch() != false) {
        setTraceSearch(other.getTraceSearch());
      }
      if (other.getPrintModel() != false) {
        setPrintModel(other.getPrintModel());
      }
      if (other.getPrintModelStats() != false) {
        setPrintModelStats(other.getPrintModelStats());
      }
      if (other.getPrintAddedConstraints() != false) {
        setPrintAddedConstraints(other.getPrintAddedConstraints());
      }
      if (other.getDisableSolve() != false) {
        setDisableSolve(other.getDisableSolve());
      }
      if (other.getUseSmallTable() != false) {
        setUseSmallTable(other.getUseSmallTable());
      }
      if (other.getUseCumulativeEdgeFinder() != false) {
        setUseCumulativeEdgeFinder(other.getUseCumulativeEdgeFinder());
      }
      if (other.getUseCumulativeTimeTable() != false) {
        setUseCumulativeTimeTable(other.getUseCumulativeTimeTable());
      }
      if (other.getUseCumulativeTimeTableSync() != false) {
        setUseCumulativeTimeTableSync(other.getUseCumulativeTimeTableSync());
      }
      if (other.getUseSequenceHighDemandTasks() != false) {
        setUseSequenceHighDemandTasks(other.getUseSequenceHighDemandTasks());
      }
      if (other.getUseAllPossibleDisjunctions() != false) {
        setUseAllPossibleDisjunctions(other.getUseAllPossibleDisjunctions());
      }
      if (other.getMaxEdgeFinderSize() != 0) {
        setMaxEdgeFinderSize(other.getMaxEdgeFinderSize());
      }
      if (other.getDiffnUseCumulative() != false) {
        setDiffnUseCumulative(other.getDiffnUseCumulative());
      }
      if (other.getUseElementRmq() != false) {
        setUseElementRmq(other.getUseElementRmq());
      }
      if (other.getSkipLocallyOptimalPaths() != false) {
        setSkipLocallyOptimalPaths(other.getSkipLocallyOptimalPaths());
      }
      if (other.getCheckSolutionPeriod() != 0) {
        setCheckSolutionPeriod(other.getCheckSolutionPeriod());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.ortools.constraintsolver.ConstraintSolverParameters parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.ortools.constraintsolver.ConstraintSolverParameters) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int compressTrail_ = 0;
    /**
     * <pre>
     * This parameter indicates if the solver should compress the trail
     * during the search. No compression means that the solver will be faster,
     * but will use more memory.
     * </pre>
     *
     * <code>.operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;</code>
     * @return The enum numeric value on the wire for compressTrail.
     */
    @java.lang.Override public int getCompressTrailValue() {
      return compressTrail_;
    }
    /**
     * <pre>
     * This parameter indicates if the solver should compress the trail
     * during the search. No compression means that the solver will be faster,
     * but will use more memory.
     * </pre>
     *
     * <code>.operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;</code>
     * @param value The enum numeric value on the wire for compressTrail to set.
     * @return This builder for chaining.
     */
    public Builder setCompressTrailValue(int value) {
      
      compressTrail_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This parameter indicates if the solver should compress the trail
     * during the search. No compression means that the solver will be faster,
     * but will use more memory.
     * </pre>
     *
     * <code>.operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;</code>
     * @return The compressTrail.
     */
    @java.lang.Override
    public com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression getCompressTrail() {
      @SuppressWarnings("deprecation")
      com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression result = com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression.valueOf(compressTrail_);
      return result == null ? com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * This parameter indicates if the solver should compress the trail
     * during the search. No compression means that the solver will be faster,
     * but will use more memory.
     * </pre>
     *
     * <code>.operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;</code>
     * @param value The compressTrail to set.
     * @return This builder for chaining.
     */
    public Builder setCompressTrail(com.google.ortools.constraintsolver.ConstraintSolverParameters.TrailCompression value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      compressTrail_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This parameter indicates if the solver should compress the trail
     * during the search. No compression means that the solver will be faster,
     * but will use more memory.
     * </pre>
     *
     * <code>.operations_research.ConstraintSolverParameters.TrailCompression compress_trail = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressTrail() {
      
      compressTrail_ = 0;
      onChanged();
      return this;
    }

    private int trailBlockSize_ ;
    /**
     * <pre>
     * This parameter indicates the default size of a block of the trail.
     * Compression applies at the block level.
     * </pre>
     *
     * <code>int32 trail_block_size = 2;</code>
     * @return The trailBlockSize.
     */
    @java.lang.Override
    public int getTrailBlockSize() {
      return trailBlockSize_;
    }
    /**
     * <pre>
     * This parameter indicates the default size of a block of the trail.
     * Compression applies at the block level.
     * </pre>
     *
     * <code>int32 trail_block_size = 2;</code>
     * @param value The trailBlockSize to set.
     * @return This builder for chaining.
     */
    public Builder setTrailBlockSize(int value) {
      
      trailBlockSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This parameter indicates the default size of a block of the trail.
     * Compression applies at the block level.
     * </pre>
     *
     * <code>int32 trail_block_size = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTrailBlockSize() {
      
      trailBlockSize_ = 0;
      onChanged();
      return this;
    }

    private int arraySplitSize_ ;
    /**
     * <pre>
     * When a sum/min/max operation is applied on a large array, this
     * array is recursively split into blocks of size 'array_split_size'.
     * </pre>
     *
     * <code>int32 array_split_size = 3;</code>
     * @return The arraySplitSize.
     */
    @java.lang.Override
    public int getArraySplitSize() {
      return arraySplitSize_;
    }
    /**
     * <pre>
     * When a sum/min/max operation is applied on a large array, this
     * array is recursively split into blocks of size 'array_split_size'.
     * </pre>
     *
     * <code>int32 array_split_size = 3;</code>
     * @param value The arraySplitSize to set.
     * @return This builder for chaining.
     */
    public Builder setArraySplitSize(int value) {
      
      arraySplitSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When a sum/min/max operation is applied on a large array, this
     * array is recursively split into blocks of size 'array_split_size'.
     * </pre>
     *
     * <code>int32 array_split_size = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearArraySplitSize() {
      
      arraySplitSize_ = 0;
      onChanged();
      return this;
    }

    private boolean storeNames_ ;
    /**
     * <pre>
     * This parameters indicates if the solver should store the names of
     * the objets it manages.
     * </pre>
     *
     * <code>bool store_names = 4;</code>
     * @return The storeNames.
     */
    @java.lang.Override
    public boolean getStoreNames() {
      return storeNames_;
    }
    /**
     * <pre>
     * This parameters indicates if the solver should store the names of
     * the objets it manages.
     * </pre>
     *
     * <code>bool store_names = 4;</code>
     * @param value The storeNames to set.
     * @return This builder for chaining.
     */
    public Builder setStoreNames(boolean value) {
      
      storeNames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This parameters indicates if the solver should store the names of
     * the objets it manages.
     * </pre>
     *
     * <code>bool store_names = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearStoreNames() {
      
      storeNames_ = false;
      onChanged();
      return this;
    }

    private boolean nameCastVariables_ ;
    /**
     * <pre>
     * Create names for cast variables.
     * </pre>
     *
     * <code>bool name_cast_variables = 5;</code>
     * @return The nameCastVariables.
     */
    @java.lang.Override
    public boolean getNameCastVariables() {
      return nameCastVariables_;
    }
    /**
     * <pre>
     * Create names for cast variables.
     * </pre>
     *
     * <code>bool name_cast_variables = 5;</code>
     * @param value The nameCastVariables to set.
     * @return This builder for chaining.
     */
    public Builder setNameCastVariables(boolean value) {
      
      nameCastVariables_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Create names for cast variables.
     * </pre>
     *
     * <code>bool name_cast_variables = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearNameCastVariables() {
      
      nameCastVariables_ = false;
      onChanged();
      return this;
    }

    private boolean nameAllVariables_ ;
    /**
     * <pre>
     * Should anonymous variables be given a name.
     * </pre>
     *
     * <code>bool name_all_variables = 6;</code>
     * @return The nameAllVariables.
     */
    @java.lang.Override
    public boolean getNameAllVariables() {
      return nameAllVariables_;
    }
    /**
     * <pre>
     * Should anonymous variables be given a name.
     * </pre>
     *
     * <code>bool name_all_variables = 6;</code>
     * @param value The nameAllVariables to set.
     * @return This builder for chaining.
     */
    public Builder setNameAllVariables(boolean value) {
      
      nameAllVariables_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Should anonymous variables be given a name.
     * </pre>
     *
     * <code>bool name_all_variables = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearNameAllVariables() {
      
      nameAllVariables_ = false;
      onChanged();
      return this;
    }

    private boolean profilePropagation_ ;
    /**
     * <pre>
     * Activate propagation profiling.
     * </pre>
     *
     * <code>bool profile_propagation = 7;</code>
     * @return The profilePropagation.
     */
    @java.lang.Override
    public boolean getProfilePropagation() {
      return profilePropagation_;
    }
    /**
     * <pre>
     * Activate propagation profiling.
     * </pre>
     *
     * <code>bool profile_propagation = 7;</code>
     * @param value The profilePropagation to set.
     * @return This builder for chaining.
     */
    public Builder setProfilePropagation(boolean value) {
      
      profilePropagation_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Activate propagation profiling.
     * </pre>
     *
     * <code>bool profile_propagation = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearProfilePropagation() {
      
      profilePropagation_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object profileFile_ = "";
    /**
     * <pre>
     * Export propagation profiling data to file.
     * </pre>
     *
     * <code>string profile_file = 8;</code>
     * @return The profileFile.
     */
    public java.lang.String getProfileFile() {
      java.lang.Object ref = profileFile_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        profileFile_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Export propagation profiling data to file.
     * </pre>
     *
     * <code>string profile_file = 8;</code>
     * @return The bytes for profileFile.
     */
    public com.google.protobuf.ByteString
        getProfileFileBytes() {
      java.lang.Object ref = profileFile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        profileFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Export propagation profiling data to file.
     * </pre>
     *
     * <code>string profile_file = 8;</code>
     * @param value The profileFile to set.
     * @return This builder for chaining.
     */
    public Builder setProfileFile(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      profileFile_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Export propagation profiling data to file.
     * </pre>
     *
     * <code>string profile_file = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearProfileFile() {
      
      profileFile_ = getDefaultInstance().getProfileFile();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Export propagation profiling data to file.
     * </pre>
     *
     * <code>string profile_file = 8;</code>
     * @param value The bytes for profileFile to set.
     * @return This builder for chaining.
     */
    public Builder setProfileFileBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      profileFile_ = value;
      onChanged();
      return this;
    }

    private boolean profileLocalSearch_ ;
    /**
     * <pre>
     * Activate local search profiling.
     * </pre>
     *
     * <code>bool profile_local_search = 16;</code>
     * @return The profileLocalSearch.
     */
    @java.lang.Override
    public boolean getProfileLocalSearch() {
      return profileLocalSearch_;
    }
    /**
     * <pre>
     * Activate local search profiling.
     * </pre>
     *
     * <code>bool profile_local_search = 16;</code>
     * @param value The profileLocalSearch to set.
     * @return This builder for chaining.
     */
    public Builder setProfileLocalSearch(boolean value) {
      
      profileLocalSearch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Activate local search profiling.
     * </pre>
     *
     * <code>bool profile_local_search = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearProfileLocalSearch() {
      
      profileLocalSearch_ = false;
      onChanged();
      return this;
    }

    private boolean printLocalSearchProfile_ ;
    /**
     * <pre>
     * Print local search profiling data after solving.
     * </pre>
     *
     * <code>bool print_local_search_profile = 17;</code>
     * @return The printLocalSearchProfile.
     */
    @java.lang.Override
    public boolean getPrintLocalSearchProfile() {
      return printLocalSearchProfile_;
    }
    /**
     * <pre>
     * Print local search profiling data after solving.
     * </pre>
     *
     * <code>bool print_local_search_profile = 17;</code>
     * @param value The printLocalSearchProfile to set.
     * @return This builder for chaining.
     */
    public Builder setPrintLocalSearchProfile(boolean value) {
      
      printLocalSearchProfile_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Print local search profiling data after solving.
     * </pre>
     *
     * <code>bool print_local_search_profile = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrintLocalSearchProfile() {
      
      printLocalSearchProfile_ = false;
      onChanged();
      return this;
    }

    private boolean tracePropagation_ ;
    /**
     * <pre>
     * Activate propagate tracing.
     * </pre>
     *
     * <code>bool trace_propagation = 9;</code>
     * @return The tracePropagation.
     */
    @java.lang.Override
    public boolean getTracePropagation() {
      return tracePropagation_;
    }
    /**
     * <pre>
     * Activate propagate tracing.
     * </pre>
     *
     * <code>bool trace_propagation = 9;</code>
     * @param value The tracePropagation to set.
     * @return This builder for chaining.
     */
    public Builder setTracePropagation(boolean value) {
      
      tracePropagation_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Activate propagate tracing.
     * </pre>
     *
     * <code>bool trace_propagation = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTracePropagation() {
      
      tracePropagation_ = false;
      onChanged();
      return this;
    }

    private boolean traceSearch_ ;
    /**
     * <pre>
     * Trace search.
     * </pre>
     *
     * <code>bool trace_search = 10;</code>
     * @return The traceSearch.
     */
    @java.lang.Override
    public boolean getTraceSearch() {
      return traceSearch_;
    }
    /**
     * <pre>
     * Trace search.
     * </pre>
     *
     * <code>bool trace_search = 10;</code>
     * @param value The traceSearch to set.
     * @return This builder for chaining.
     */
    public Builder setTraceSearch(boolean value) {
      
      traceSearch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Trace search.
     * </pre>
     *
     * <code>bool trace_search = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTraceSearch() {
      
      traceSearch_ = false;
      onChanged();
      return this;
    }

    private boolean printModel_ ;
    /**
     * <pre>
     * Print the model before solving.
     * </pre>
     *
     * <code>bool print_model = 11;</code>
     * @return The printModel.
     */
    @java.lang.Override
    public boolean getPrintModel() {
      return printModel_;
    }
    /**
     * <pre>
     * Print the model before solving.
     * </pre>
     *
     * <code>bool print_model = 11;</code>
     * @param value The printModel to set.
     * @return This builder for chaining.
     */
    public Builder setPrintModel(boolean value) {
      
      printModel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Print the model before solving.
     * </pre>
     *
     * <code>bool print_model = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrintModel() {
      
      printModel_ = false;
      onChanged();
      return this;
    }

    private boolean printModelStats_ ;
    /**
     * <pre>
     * Print model statistics before solving.
     * </pre>
     *
     * <code>bool print_model_stats = 12;</code>
     * @return The printModelStats.
     */
    @java.lang.Override
    public boolean getPrintModelStats() {
      return printModelStats_;
    }
    /**
     * <pre>
     * Print model statistics before solving.
     * </pre>
     *
     * <code>bool print_model_stats = 12;</code>
     * @param value The printModelStats to set.
     * @return This builder for chaining.
     */
    public Builder setPrintModelStats(boolean value) {
      
      printModelStats_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Print model statistics before solving.
     * </pre>
     *
     * <code>bool print_model_stats = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrintModelStats() {
      
      printModelStats_ = false;
      onChanged();
      return this;
    }

    private boolean printAddedConstraints_ ;
    /**
     * <pre>
     * Print added constraints.
     * </pre>
     *
     * <code>bool print_added_constraints = 13;</code>
     * @return The printAddedConstraints.
     */
    @java.lang.Override
    public boolean getPrintAddedConstraints() {
      return printAddedConstraints_;
    }
    /**
     * <pre>
     * Print added constraints.
     * </pre>
     *
     * <code>bool print_added_constraints = 13;</code>
     * @param value The printAddedConstraints to set.
     * @return This builder for chaining.
     */
    public Builder setPrintAddedConstraints(boolean value) {
      
      printAddedConstraints_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Print added constraints.
     * </pre>
     *
     * <code>bool print_added_constraints = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrintAddedConstraints() {
      
      printAddedConstraints_ = false;
      onChanged();
      return this;
    }

    private boolean disableSolve_ ;
    /**
     * <code>bool disable_solve = 15;</code>
     * @return The disableSolve.
     */
    @java.lang.Override
    public boolean getDisableSolve() {
      return disableSolve_;
    }
    /**
     * <code>bool disable_solve = 15;</code>
     * @param value The disableSolve to set.
     * @return This builder for chaining.
     */
    public Builder setDisableSolve(boolean value) {
      
      disableSolve_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool disable_solve = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisableSolve() {
      
      disableSolve_ = false;
      onChanged();
      return this;
    }

    private boolean useSmallTable_ ;
    /**
     * <pre>
     * Control the implementation of the table constraint.
     * </pre>
     *
     * <code>bool use_small_table = 101;</code>
     * @return The useSmallTable.
     */
    @java.lang.Override
    public boolean getUseSmallTable() {
      return useSmallTable_;
    }
    /**
     * <pre>
     * Control the implementation of the table constraint.
     * </pre>
     *
     * <code>bool use_small_table = 101;</code>
     * @param value The useSmallTable to set.
     * @return This builder for chaining.
     */
    public Builder setUseSmallTable(boolean value) {
      
      useSmallTable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Control the implementation of the table constraint.
     * </pre>
     *
     * <code>bool use_small_table = 101;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseSmallTable() {
      
      useSmallTable_ = false;
      onChanged();
      return this;
    }

    private boolean useCumulativeEdgeFinder_ ;
    /**
     * <pre>
     * Control the propagation of the cumulative constraint.
     * </pre>
     *
     * <code>bool use_cumulative_edge_finder = 105;</code>
     * @return The useCumulativeEdgeFinder.
     */
    @java.lang.Override
    public boolean getUseCumulativeEdgeFinder() {
      return useCumulativeEdgeFinder_;
    }
    /**
     * <pre>
     * Control the propagation of the cumulative constraint.
     * </pre>
     *
     * <code>bool use_cumulative_edge_finder = 105;</code>
     * @param value The useCumulativeEdgeFinder to set.
     * @return This builder for chaining.
     */
    public Builder setUseCumulativeEdgeFinder(boolean value) {
      
      useCumulativeEdgeFinder_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Control the propagation of the cumulative constraint.
     * </pre>
     *
     * <code>bool use_cumulative_edge_finder = 105;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseCumulativeEdgeFinder() {
      
      useCumulativeEdgeFinder_ = false;
      onChanged();
      return this;
    }

    private boolean useCumulativeTimeTable_ ;
    /**
     * <code>bool use_cumulative_time_table = 106;</code>
     * @return The useCumulativeTimeTable.
     */
    @java.lang.Override
    public boolean getUseCumulativeTimeTable() {
      return useCumulativeTimeTable_;
    }
    /**
     * <code>bool use_cumulative_time_table = 106;</code>
     * @param value The useCumulativeTimeTable to set.
     * @return This builder for chaining.
     */
    public Builder setUseCumulativeTimeTable(boolean value) {
      
      useCumulativeTimeTable_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool use_cumulative_time_table = 106;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseCumulativeTimeTable() {
      
      useCumulativeTimeTable_ = false;
      onChanged();
      return this;
    }

    private boolean useCumulativeTimeTableSync_ ;
    /**
     * <code>bool use_cumulative_time_table_sync = 112;</code>
     * @return The useCumulativeTimeTableSync.
     */
    @java.lang.Override
    public boolean getUseCumulativeTimeTableSync() {
      return useCumulativeTimeTableSync_;
    }
    /**
     * <code>bool use_cumulative_time_table_sync = 112;</code>
     * @param value The useCumulativeTimeTableSync to set.
     * @return This builder for chaining.
     */
    public Builder setUseCumulativeTimeTableSync(boolean value) {
      
      useCumulativeTimeTableSync_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool use_cumulative_time_table_sync = 112;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseCumulativeTimeTableSync() {
      
      useCumulativeTimeTableSync_ = false;
      onChanged();
      return this;
    }

    private boolean useSequenceHighDemandTasks_ ;
    /**
     * <code>bool use_sequence_high_demand_tasks = 107;</code>
     * @return The useSequenceHighDemandTasks.
     */
    @java.lang.Override
    public boolean getUseSequenceHighDemandTasks() {
      return useSequenceHighDemandTasks_;
    }
    /**
     * <code>bool use_sequence_high_demand_tasks = 107;</code>
     * @param value The useSequenceHighDemandTasks to set.
     * @return This builder for chaining.
     */
    public Builder setUseSequenceHighDemandTasks(boolean value) {
      
      useSequenceHighDemandTasks_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool use_sequence_high_demand_tasks = 107;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseSequenceHighDemandTasks() {
      
      useSequenceHighDemandTasks_ = false;
      onChanged();
      return this;
    }

    private boolean useAllPossibleDisjunctions_ ;
    /**
     * <code>bool use_all_possible_disjunctions = 108;</code>
     * @return The useAllPossibleDisjunctions.
     */
    @java.lang.Override
    public boolean getUseAllPossibleDisjunctions() {
      return useAllPossibleDisjunctions_;
    }
    /**
     * <code>bool use_all_possible_disjunctions = 108;</code>
     * @param value The useAllPossibleDisjunctions to set.
     * @return This builder for chaining.
     */
    public Builder setUseAllPossibleDisjunctions(boolean value) {
      
      useAllPossibleDisjunctions_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool use_all_possible_disjunctions = 108;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseAllPossibleDisjunctions() {
      
      useAllPossibleDisjunctions_ = false;
      onChanged();
      return this;
    }

    private int maxEdgeFinderSize_ ;
    /**
     * <code>int32 max_edge_finder_size = 109;</code>
     * @return The maxEdgeFinderSize.
     */
    @java.lang.Override
    public int getMaxEdgeFinderSize() {
      return maxEdgeFinderSize_;
    }
    /**
     * <code>int32 max_edge_finder_size = 109;</code>
     * @param value The maxEdgeFinderSize to set.
     * @return This builder for chaining.
     */
    public Builder setMaxEdgeFinderSize(int value) {
      
      maxEdgeFinderSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 max_edge_finder_size = 109;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxEdgeFinderSize() {
      
      maxEdgeFinderSize_ = 0;
      onChanged();
      return this;
    }

    private boolean diffnUseCumulative_ ;
    /**
     * <pre>
     * Control the propagation of the diffn constraint.
     * </pre>
     *
     * <code>bool diffn_use_cumulative = 110;</code>
     * @return The diffnUseCumulative.
     */
    @java.lang.Override
    public boolean getDiffnUseCumulative() {
      return diffnUseCumulative_;
    }
    /**
     * <pre>
     * Control the propagation of the diffn constraint.
     * </pre>
     *
     * <code>bool diffn_use_cumulative = 110;</code>
     * @param value The diffnUseCumulative to set.
     * @return This builder for chaining.
     */
    public Builder setDiffnUseCumulative(boolean value) {
      
      diffnUseCumulative_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Control the propagation of the diffn constraint.
     * </pre>
     *
     * <code>bool diffn_use_cumulative = 110;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiffnUseCumulative() {
      
      diffnUseCumulative_ = false;
      onChanged();
      return this;
    }

    private boolean useElementRmq_ ;
    /**
     * <pre>
     * Control the implementation of the element constraint.
     * </pre>
     *
     * <code>bool use_element_rmq = 111;</code>
     * @return The useElementRmq.
     */
    @java.lang.Override
    public boolean getUseElementRmq() {
      return useElementRmq_;
    }
    /**
     * <pre>
     * Control the implementation of the element constraint.
     * </pre>
     *
     * <code>bool use_element_rmq = 111;</code>
     * @param value The useElementRmq to set.
     * @return This builder for chaining.
     */
    public Builder setUseElementRmq(boolean value) {
      
      useElementRmq_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Control the implementation of the element constraint.
     * </pre>
     *
     * <code>bool use_element_rmq = 111;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseElementRmq() {
      
      useElementRmq_ = false;
      onChanged();
      return this;
    }

    private boolean skipLocallyOptimalPaths_ ;
    /**
     * <pre>
     * Skip locally optimal pairs of paths in PathOperators. Setting this
     * parameter to true might skip valid neighbors if there are constraints
     * linking paths together (such as precedences). In any other case this
     * should only speed up the search without omitting any neighbors.
     * </pre>
     *
     * <code>bool skip_locally_optimal_paths = 113;</code>
     * @return The skipLocallyOptimalPaths.
     */
    @java.lang.Override
    public boolean getSkipLocallyOptimalPaths() {
      return skipLocallyOptimalPaths_;
    }
    /**
     * <pre>
     * Skip locally optimal pairs of paths in PathOperators. Setting this
     * parameter to true might skip valid neighbors if there are constraints
     * linking paths together (such as precedences). In any other case this
     * should only speed up the search without omitting any neighbors.
     * </pre>
     *
     * <code>bool skip_locally_optimal_paths = 113;</code>
     * @param value The skipLocallyOptimalPaths to set.
     * @return This builder for chaining.
     */
    public Builder setSkipLocallyOptimalPaths(boolean value) {
      
      skipLocallyOptimalPaths_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Skip locally optimal pairs of paths in PathOperators. Setting this
     * parameter to true might skip valid neighbors if there are constraints
     * linking paths together (such as precedences). In any other case this
     * should only speed up the search without omitting any neighbors.
     * </pre>
     *
     * <code>bool skip_locally_optimal_paths = 113;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipLocallyOptimalPaths() {
      
      skipLocallyOptimalPaths_ = false;
      onChanged();
      return this;
    }

    private int checkSolutionPeriod_ ;
    /**
     * <pre>
     * Control the behavior of local search.
     * </pre>
     *
     * <code>int32 check_solution_period = 114;</code>
     * @return The checkSolutionPeriod.
     */
    @java.lang.Override
    public int getCheckSolutionPeriod() {
      return checkSolutionPeriod_;
    }
    /**
     * <pre>
     * Control the behavior of local search.
     * </pre>
     *
     * <code>int32 check_solution_period = 114;</code>
     * @param value The checkSolutionPeriod to set.
     * @return This builder for chaining.
     */
    public Builder setCheckSolutionPeriod(int value) {
      
      checkSolutionPeriod_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Control the behavior of local search.
     * </pre>
     *
     * <code>int32 check_solution_period = 114;</code>
     * @return This builder for chaining.
     */
    public Builder clearCheckSolutionPeriod() {
      
      checkSolutionPeriod_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:operations_research.ConstraintSolverParameters)
  }

  // @@protoc_insertion_point(class_scope:operations_research.ConstraintSolverParameters)
  private static final com.google.ortools.constraintsolver.ConstraintSolverParameters DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ortools.constraintsolver.ConstraintSolverParameters();
  }

  public static com.google.ortools.constraintsolver.ConstraintSolverParameters getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConstraintSolverParameters>
      PARSER = new com.google.protobuf.AbstractParser<ConstraintSolverParameters>() {
    @java.lang.Override
    public ConstraintSolverParameters parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ConstraintSolverParameters(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ConstraintSolverParameters> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConstraintSolverParameters> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ortools.constraintsolver.ConstraintSolverParameters getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

