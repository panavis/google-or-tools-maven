// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/sat/sat_parameters.proto

package com.google.ortools.sat;

public final class SatParametersOuterClass {
  private SatParametersOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_operations_research_sat_SatParameters_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_operations_research_sat_SatParameters_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n ortools/sat/sat_parameters.proto\022\027oper" +
      "ations_research.sat\"\317=\n\rSatParameters\022`\n" +
      "\030preferred_variable_order\030\001 \001(\01624.operat" +
      "ions_research.sat.SatParameters.Variable" +
      "Order:\010IN_ORDER\022Y\n\020initial_polarity\030\002 \001(" +
      "\0162/.operations_research.sat.SatParameter" +
      "s.Polarity:\016POLARITY_FALSE\022\036\n\020use_phase_" +
      "saving\030, \001(\010:\004true\022 \n\025random_polarity_ra" +
      "tio\030- \001(\001:\0010\022 \n\025random_branches_ratio\030  " +
      "\001(\001:\0010\022!\n\022use_erwa_heuristic\030K \001(\010:\005fals" +
      "e\022%\n\032initial_variables_activity\030L \001(\001:\0010" +
      "\0226\n\'also_bump_variables_in_conflict_reas" +
      "ons\030M \001(\010:\005false\022o\n\026minimization_algorit" +
      "hm\030\004 \001(\0162D.operations_research.sat.SatPa" +
      "rameters.ConflictMinimizationAlgorithm:\t" +
      "RECURSIVE\022\202\001\n\035binary_minimization_algori" +
      "thm\030\" \001(\0162@.operations_research.sat.SatP" +
      "arameters.BinaryMinizationAlgorithm:\031BIN" +
      "ARY_MINIMIZATION_FIRST\0222\n$subsumption_du" +
      "ring_conflict_analysis\0308 \001(\010:\004true\022$\n\025cl" +
      "ause_cleanup_period\030\013 \001(\005:\00510000\022$\n\025clau" +
      "se_cleanup_target\030\r \001(\005:\00510000\022k\n\031clause" +
      "_cleanup_protection\030: \001(\01627.operations_r" +
      "esearch.sat.SatParameters.ClauseProtecti" +
      "on:\017PROTECTION_NONE\022#\n\030clause_cleanup_lb" +
      "d_bound\030; \001(\005:\0015\022g\n\027clause_cleanup_order" +
      "ing\030< \001(\01625.operations_research.sat.SatP" +
      "arameters.ClauseOrdering:\017CLAUSE_ACTIVIT" +
      "Y\022!\n\024pb_cleanup_increment\030. \001(\005:\003200\022\035\n\020" +
      "pb_cleanup_ratio\030/ \001(\001:\0030.5\0224\n(minimize_" +
      "with_propagation_restart_period\030` \001(\005:\0021" +
      "0\0225\n\'minimize_with_propagation_num_decis" +
      "ions\030a \001(\005:\0041000\022$\n\027variable_activity_de" +
      "cay\030\017 \001(\001:\0030.8\022+\n\033max_variable_activity_" +
      "value\030\020 \001(\001:\0061e+100\022\037\n\021glucose_max_decay" +
      "\030\026 \001(\001:\0040.95\022%\n\027glucose_decay_increment\030" +
      "\027 \001(\001:\0040.01\022,\n\036glucose_decay_increment_p" +
      "eriod\030\030 \001(\005:\0045000\022$\n\025clause_activity_dec" +
      "ay\030\021 \001(\001:\0050.999\022(\n\031max_clause_activity_v" +
      "alue\030\022 \001(\001:\0051e+20\022S\n\022restart_algorithms\030" +
      "= \003(\01627.operations_research.sat.SatParam" +
      "eters.RestartAlgorithm\022e\n\032default_restar" +
      "t_algorithms\030F \001(\t:ALUBY_RESTART,LBD_MOV" +
      "ING_AVERAGE_RESTART,DL_MOVING_AVERAGE_RE" +
      "START\022\032\n\016restart_period\030\036 \001(\005:\00250\022\'\n\033res" +
      "tart_running_window_size\030> \001(\005:\00250\022#\n\030re" +
      "start_dl_average_ratio\030? \001(\001:\0011\022$\n\031resta" +
      "rt_lbd_average_ratio\030G \001(\001:\0011\022#\n\024use_blo" +
      "cking_restart\030@ \001(\010:\005false\022*\n\034blocking_r" +
      "estart_window_size\030A \001(\005:\0045000\022(\n\033blocki" +
      "ng_restart_multiplier\030B \001(\001:\0031.4\0220\n%num_" +
      "conflicts_before_strategy_changes\030D \001(\005:" +
      "\0010\022)\n\036strategy_change_increase_ratio\030E \001" +
      "(\001:\0010\022 \n\023max_time_in_seconds\030$ \001(\001:\003inf\022" +
      "#\n\026max_deterministic_time\030C \001(\001:\003inf\0224\n\027" +
      "max_number_of_conflicts\030% \001(\003:\023922337203" +
      "6854775807\022\037\n\020max_memory_in_mb\030( \001(\003:\00510" +
      "000\022\036\n\022absolute_gap_limit\030\237\001 \001(\001:\0010\022\036\n\022r" +
      "elative_gap_limit\030\240\001 \001(\001:\0010\022-\n\037treat_bin" +
      "ary_clauses_separately\030! \001(\010:\004true\022\026\n\013ra" +
      "ndom_seed\030\037 \001(\005:\0011\022\"\n\023log_search_progres" +
      "s\030) \001(\010:\005false\022 \n\021use_pb_resolution\030+ \001(" +
      "\010:\005false\0226\n\'minimize_reduction_during_pb" +
      "_resolution\0300 \001(\010:\005false\022,\n\036count_assump" +
      "tion_levels_in_lbd\0301 \001(\010:\004true\022#\n\026presol" +
      "ve_bve_threshold\0306 \001(\005:\003500\022%\n\032presolve_" +
      "bve_clause_weight\0307 \001(\005:\0013\0225\n)presolve_p" +
      "robing_deterministic_time_limit\0309 \001(\001:\0023" +
      "0\022%\n\027presolve_blocked_clause\030X \001(\010:\004true" +
      "\022\036\n\020presolve_use_bva\030H \001(\010:\004true\022!\n\026pres" +
      "olve_bva_threshold\030I \001(\005:\0011\022#\n\027max_preso" +
      "lve_iterations\030\212\001 \001(\005:\0013\022\037\n\021cp_model_pre" +
      "solve\030V \001(\010:\004true\0223\n#cp_model_postsolve_" +
      "with_full_solver\030\242\001 \001(\010:\005false\0220\n$cp_mod" +
      "el_max_num_presolve_operations\030\227\001 \001(\005:\0010" +
      "\022!\n\026cp_model_probing_level\030n \001(\005:\0012\022\'\n\031c" +
      "p_model_use_sat_presolve\030] \001(\010:\004true\022$\n\024" +
      "use_sat_inprocessing\030\243\001 \001(\010:\005false\022)\n\032ex" +
      "pand_element_constraints\030\214\001 \001(\010:\004true\022+\n" +
      "\034expand_automaton_constraints\030\217\001 \001(\010:\004tr" +
      "ue\022\'\n\030expand_table_constraints\030\236\001 \001(\010:\004t" +
      "rue\0223\n\033merge_no_overlap_work_limit\030\221\001 \001(" +
      "\001:\r1000000000000\0220\n\034merge_at_most_one_wo" +
      "rk_limit\030\222\001 \001(\001:\t100000000\022\'\n\033presolve_s" +
      "ubstitution_level\030\223\001 \001(\005:\0011\022$\n\026use_optim" +
      "ization_hints\030# \001(\010:\004true\022\033\n\rminimize_co" +
      "re\0302 \001(\010:\004true\022!\n\023find_multiple_cores\030T " +
      "\001(\010:\004true\022 \n\022cover_optimization\030Y \001(\010:\004t" +
      "rue\022x\n\030max_sat_assumption_order\0303 \001(\0162<." +
      "operations_research.sat.SatParameters.Ma" +
      "xSatAssumptionOrder:\030DEFAULT_ASSUMPTION_" +
      "ORDER\022/\n max_sat_reverse_assumption_orde" +
      "r\0304 \001(\010:\005false\022|\n\026max_sat_stratification" +
      "\0305 \001(\0162D.operations_research.sat.SatPara" +
      "meters.MaxSatStratificationAlgorithm:\026ST" +
      "RATIFICATION_DESCENT\0227\n)use_precedences_" +
      "in_disjunctive_constraint\030J \001(\010:\004true\022<\n" +
      "-use_overload_checker_in_cumulative_cons" +
      "traint\030N \001(\010:\005false\022B\n3use_timetable_edg" +
      "e_finding_in_cumulative_constraint\030O \001(\010" +
      ":\005false\022A\n3use_disjunctive_constraint_in" +
      "_cumulative_constraint\030P \001(\010:\004true\022\036\n\023li" +
      "nearization_level\030Z \001(\005:\0011\022!\n\026boolean_en" +
      "coding_level\030k \001(\005:\0011\022\033\n\014max_num_cuts\030[ " +
      "\001(\005:\00510000\022*\n\033only_add_cuts_at_level_zer" +
      "o\030\\ \001(\010:\005false\022 \n\021add_knapsack_cuts\030o \001(" +
      "\010:\005false\022\031\n\013add_cg_cuts\030u \001(\010:\004true\022\032\n\014a" +
      "dd_mir_cuts\030x \001(\010:\004true\022!\n\025max_all_diff_" +
      "cut_size\030\224\001 \001(\005:\0017\022\037\n\020add_lin_max_cuts\030\230" +
      "\001 \001(\010:\004true\022)\n\034max_integer_rounding_scal" +
      "ing\030w \001(\005:\003600\022\'\n\031add_lp_constraints_laz" +
      "ily\030p \001(\010:\004true\0222\n$min_orthogonality_for" +
      "_lp_constraints\030s \001(\001:\0040.05\022(\n\034max_cut_r" +
      "ounds_at_level_zero\030\232\001 \001(\005:\0011\022+\n\036max_con" +
      "secutive_inactive_count\030y \001(\005:\003100\0220\n\032cu" +
      "t_max_active_count_value\030\233\001 \001(\001:\0131000000" +
      "0000\022$\n\026cut_active_count_decay\030\234\001 \001(\001:\0030" +
      ".8\022!\n\022cut_cleanup_target\030\235\001 \001(\005:\0041000\022&\n" +
      "\032new_constraints_batch_size\030z \001(\005:\00250\022b\n" +
      "\020search_branching\030R \001(\01626.operations_res" +
      "earch.sat.SatParameters.SearchBranching:" +
      "\020AUTOMATIC_SEARCH\022 \n\023hint_conflict_limit" +
      "\030\231\001 \001(\005:\00210\022)\n\033exploit_integer_lp_soluti" +
      "on\030^ \001(\010:\004true\022%\n\027exploit_all_lp_solutio" +
      "n\030t \001(\010:\004true\022%\n\025exploit_best_solution\030\202" +
      "\001 \001(\010:\005false\022+\n\033exploit_relaxation_solut" +
      "ion\030\241\001 \001(\010:\005false\022 \n\021exploit_objective\030\203" +
      "\001 \001(\010:\004true\022\"\n\026probing_period_at_root\030\216\001" +
      " \001(\003:\0010\022.\n!pseudo_cost_reliability_thres" +
      "hold\030{ \001(\003:\003100\022!\n\022optimize_with_core\030S " +
      "\001(\010:\005false\022\'\n\033binary_search_num_conflict" +
      "s\030c \001(\005:\002-1\022#\n\024optimize_with_max_hs\030U \001(" +
      "\010:\005false\022&\n\027enumerate_all_solutions\030W \001(" +
      "\010:\005false\0222\n\"fill_tightened_domains_in_re" +
      "sponse\030\204\001 \001(\010:\005false\022\'\n\031instantiate_all_" +
      "variables\030j \001(\010:\004true\0226\n(auto_detect_gre" +
      "ater_than_at_least_one_of\030_ \001(\010:\004true\022(\n" +
      "\031stop_after_first_solution\030b \001(\010:\005false\022" +
      "#\n\023stop_after_presolve\030\225\001 \001(\010:\005false\022\035\n\022" +
      "num_search_workers\030d \001(\005:\0011\022!\n\021interleav" +
      "e_search\030\210\001 \001(\010:\005false\022!\n\025interleave_bat" +
      "ch_size\030\206\001 \001(\005:\0011\0226\n&reduce_memory_usage" +
      "_in_interleave_mode\030\215\001 \001(\010:\005false\022$\n\026sha" +
      "re_objective_bounds\030q \001(\010:\004true\022%\n\027share" +
      "_level_zero_bounds\030r \001(\010:\004true\022\033\n\014use_ln" +
      "s_only\030e \001(\010:\005false\022.\n\037lns_focus_on_deci" +
      "sion_variables\030i \001(\010:\005false\022\033\n\014use_rins_" +
      "lns\030\201\001 \001(\010:\004true\022#\n\024use_feasibility_pump" +
      "\030\244\001 \001(\010:\004true\022c\n\013fp_rounding\030\245\001 \001(\01627.op" +
      "erations_research.sat.SatParameters.FPRo" +
      "undingMethod:\024PROPAGATION_ASSISTED\022\"\n\022us" +
      "e_relaxation_lns\030\226\001 \001(\010:\005false\022$\n\024divers" +
      "ify_lns_params\030\211\001 \001(\010:\005false\022\037\n\020randomiz" +
      "e_search\030g \001(\010:\005false\022)\n\036search_randomiz" +
      "ation_tolerance\030h \001(\003:\0010\022$\n\026use_optional" +
      "_variables\030l \001(\010:\004true\022!\n\023use_exact_lp_r" +
      "eason\030m \001(\010:\004true\022#\n\023use_branching_in_lp" +
      "\030\213\001 \001(\010:\005false\022\'\n\027use_combined_no_overla" +
      "p\030\205\001 \001(\010:\005false\022\"\n\023catch_sigint_signal\030\207" +
      "\001 \001(\010:\004true\022!\n\022use_implied_bounds\030\220\001 \001(\010" +
      ":\004true\022\037\n\rmip_max_bound\030| \001(\001:\01010000000\022" +
      "\032\n\017mip_var_scaling\030} \001(\001:\0011\0220\n!mip_autom" +
      "atically_scale_variables\030\246\001 \001(\010:\004true\022#\n" +
      "\024mip_wanted_precision\030~ \001(\001:\0051e-06\022%\n\031mi" +
      "p_max_activity_exponent\030\177 \001(\005:\00253\022$\n\023mip" +
      "_check_precision\030\200\001 \001(\001:\0060.0001\"H\n\rVaria" +
      "bleOrder\022\014\n\010IN_ORDER\020\000\022\024\n\020IN_REVERSE_ORD" +
      "ER\020\001\022\023\n\017IN_RANDOM_ORDER\020\002\"\206\001\n\010Polarity\022\021" +
      "\n\rPOLARITY_TRUE\020\000\022\022\n\016POLARITY_FALSE\020\001\022\023\n" +
      "\017POLARITY_RANDOM\020\002\022\032\n\026POLARITY_WEIGHTED_" +
      "SIGN\020\003\022\"\n\036POLARITY_REVERSE_WEIGHTED_SIGN" +
      "\020\004\"V\n\035ConflictMinimizationAlgorithm\022\010\n\004N" +
      "ONE\020\000\022\n\n\006SIMPLE\020\001\022\r\n\tRECURSIVE\020\002\022\020\n\014EXPE" +
      "RIMENTAL\020\003\"\340\001\n\031BinaryMinizationAlgorithm" +
      "\022\032\n\026NO_BINARY_MINIMIZATION\020\000\022\035\n\031BINARY_M" +
      "INIMIZATION_FIRST\020\001\0227\n3BINARY_MINIMIZATI" +
      "ON_FIRST_WITH_TRANSITIVE_REDUCTION\020\004\022)\n%" +
      "BINARY_MINIMIZATION_WITH_REACHABILITY\020\002\022" +
      "$\n EXPERIMENTAL_BINARY_MINIMIZATION\020\003\"R\n" +
      "\020ClauseProtection\022\023\n\017PROTECTION_NONE\020\000\022\025" +
      "\n\021PROTECTION_ALWAYS\020\001\022\022\n\016PROTECTION_LBD\020" +
      "\002\"5\n\016ClauseOrdering\022\023\n\017CLAUSE_ACTIVITY\020\000" +
      "\022\016\n\nCLAUSE_LBD\020\001\"\206\001\n\020RestartAlgorithm\022\016\n" +
      "\nNO_RESTART\020\000\022\020\n\014LUBY_RESTART\020\001\022\035\n\031DL_MO" +
      "VING_AVERAGE_RESTART\020\002\022\036\n\032LBD_MOVING_AVE" +
      "RAGE_RESTART\020\003\022\021\n\rFIXED_RESTART\020\004\"t\n\025Max" +
      "SatAssumptionOrder\022\034\n\030DEFAULT_ASSUMPTION" +
      "_ORDER\020\000\022\035\n\031ORDER_ASSUMPTION_BY_DEPTH\020\001\022" +
      "\036\n\032ORDER_ASSUMPTION_BY_WEIGHT\020\002\"o\n\035MaxSa" +
      "tStratificationAlgorithm\022\027\n\023STRATIFICATI" +
      "ON_NONE\020\000\022\032\n\026STRATIFICATION_DESCENT\020\001\022\031\n" +
      "\025STRATIFICATION_ASCENT\020\002\"\260\001\n\017SearchBranc" +
      "hing\022\024\n\020AUTOMATIC_SEARCH\020\000\022\020\n\014FIXED_SEAR" +
      "CH\020\001\022\024\n\020PORTFOLIO_SEARCH\020\002\022\r\n\tLP_SEARCH\020" +
      "\003\022\026\n\022PSEUDO_COST_SEARCH\020\004\022\'\n#PORTFOLIO_W" +
      "ITH_QUICK_RESTART_SEARCH\020\005\022\017\n\013HINT_SEARC" +
      "H\020\006\"h\n\020FPRoundingMethod\022\023\n\017NEAREST_INTEG" +
      "ER\020\000\022\016\n\nLOCK_BASED\020\001\022\025\n\021ACTIVE_LOCK_BASE" +
      "D\020\003\022\030\n\024PROPAGATION_ASSISTED\020\002B\032\n\026com.goo" +
      "gle.ortools.satP\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_operations_research_sat_SatParameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_operations_research_sat_SatParameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_operations_research_sat_SatParameters_descriptor,
        new java.lang.String[] { "PreferredVariableOrder", "InitialPolarity", "UsePhaseSaving", "RandomPolarityRatio", "RandomBranchesRatio", "UseErwaHeuristic", "InitialVariablesActivity", "AlsoBumpVariablesInConflictReasons", "MinimizationAlgorithm", "BinaryMinimizationAlgorithm", "SubsumptionDuringConflictAnalysis", "ClauseCleanupPeriod", "ClauseCleanupTarget", "ClauseCleanupProtection", "ClauseCleanupLbdBound", "ClauseCleanupOrdering", "PbCleanupIncrement", "PbCleanupRatio", "MinimizeWithPropagationRestartPeriod", "MinimizeWithPropagationNumDecisions", "VariableActivityDecay", "MaxVariableActivityValue", "GlucoseMaxDecay", "GlucoseDecayIncrement", "GlucoseDecayIncrementPeriod", "ClauseActivityDecay", "MaxClauseActivityValue", "RestartAlgorithms", "DefaultRestartAlgorithms", "RestartPeriod", "RestartRunningWindowSize", "RestartDlAverageRatio", "RestartLbdAverageRatio", "UseBlockingRestart", "BlockingRestartWindowSize", "BlockingRestartMultiplier", "NumConflictsBeforeStrategyChanges", "StrategyChangeIncreaseRatio", "MaxTimeInSeconds", "MaxDeterministicTime", "MaxNumberOfConflicts", "MaxMemoryInMb", "AbsoluteGapLimit", "RelativeGapLimit", "TreatBinaryClausesSeparately", "RandomSeed", "LogSearchProgress", "UsePbResolution", "MinimizeReductionDuringPbResolution", "CountAssumptionLevelsInLbd", "PresolveBveThreshold", "PresolveBveClauseWeight", "PresolveProbingDeterministicTimeLimit", "PresolveBlockedClause", "PresolveUseBva", "PresolveBvaThreshold", "MaxPresolveIterations", "CpModelPresolve", "CpModelPostsolveWithFullSolver", "CpModelMaxNumPresolveOperations", "CpModelProbingLevel", "CpModelUseSatPresolve", "UseSatInprocessing", "ExpandElementConstraints", "ExpandAutomatonConstraints", "ExpandTableConstraints", "MergeNoOverlapWorkLimit", "MergeAtMostOneWorkLimit", "PresolveSubstitutionLevel", "UseOptimizationHints", "MinimizeCore", "FindMultipleCores", "CoverOptimization", "MaxSatAssumptionOrder", "MaxSatReverseAssumptionOrder", "MaxSatStratification", "UsePrecedencesInDisjunctiveConstraint", "UseOverloadCheckerInCumulativeConstraint", "UseTimetableEdgeFindingInCumulativeConstraint", "UseDisjunctiveConstraintInCumulativeConstraint", "LinearizationLevel", "BooleanEncodingLevel", "MaxNumCuts", "OnlyAddCutsAtLevelZero", "AddKnapsackCuts", "AddCgCuts", "AddMirCuts", "MaxAllDiffCutSize", "AddLinMaxCuts", "MaxIntegerRoundingScaling", "AddLpConstraintsLazily", "MinOrthogonalityForLpConstraints", "MaxCutRoundsAtLevelZero", "MaxConsecutiveInactiveCount", "CutMaxActiveCountValue", "CutActiveCountDecay", "CutCleanupTarget", "NewConstraintsBatchSize", "SearchBranching", "HintConflictLimit", "ExploitIntegerLpSolution", "ExploitAllLpSolution", "ExploitBestSolution", "ExploitRelaxationSolution", "ExploitObjective", "ProbingPeriodAtRoot", "PseudoCostReliabilityThreshold", "OptimizeWithCore", "BinarySearchNumConflicts", "OptimizeWithMaxHs", "EnumerateAllSolutions", "FillTightenedDomainsInResponse", "InstantiateAllVariables", "AutoDetectGreaterThanAtLeastOneOf", "StopAfterFirstSolution", "StopAfterPresolve", "NumSearchWorkers", "InterleaveSearch", "InterleaveBatchSize", "ReduceMemoryUsageInInterleaveMode", "ShareObjectiveBounds", "ShareLevelZeroBounds", "UseLnsOnly", "LnsFocusOnDecisionVariables", "UseRinsLns", "UseFeasibilityPump", "FpRounding", "UseRelaxationLns", "DiversifyLnsParams", "RandomizeSearch", "SearchRandomizationTolerance", "UseOptionalVariables", "UseExactLpReason", "UseBranchingInLp", "UseCombinedNoOverlap", "CatchSigintSignal", "UseImpliedBounds", "MipMaxBound", "MipVarScaling", "MipAutomaticallyScaleVariables", "MipWantedPrecision", "MipMaxActivityExponent", "MipCheckPrecision", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
