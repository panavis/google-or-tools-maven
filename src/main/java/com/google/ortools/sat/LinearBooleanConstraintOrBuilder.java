// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/sat/boolean_problem.proto

package com.google.ortools.sat;

public interface LinearBooleanConstraintOrBuilder extends
    // @@protoc_insertion_point(interface_extends:operations_research.sat.LinearBooleanConstraint)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Linear terms involved in this constraint.
   * literals[i] is the signed representation of the i-th literal of the
   * constraint and coefficients[i] its coefficients. The signed representation
   * is as follow: for a 0-based variable index x, (x + 1) represents the
   * variable x and -(x + 1) represents its negation.
   * Note that the same variable shouldn't appear twice and that zero
   * coefficients are not allowed.
   * </pre>
   *
   * <code>repeated int32 literals = 1;</code>
   * @return A list containing the literals.
   */
  java.util.List<java.lang.Integer> getLiteralsList();
  /**
   * <pre>
   * Linear terms involved in this constraint.
   * literals[i] is the signed representation of the i-th literal of the
   * constraint and coefficients[i] its coefficients. The signed representation
   * is as follow: for a 0-based variable index x, (x + 1) represents the
   * variable x and -(x + 1) represents its negation.
   * Note that the same variable shouldn't appear twice and that zero
   * coefficients are not allowed.
   * </pre>
   *
   * <code>repeated int32 literals = 1;</code>
   * @return The count of literals.
   */
  int getLiteralsCount();
  /**
   * <pre>
   * Linear terms involved in this constraint.
   * literals[i] is the signed representation of the i-th literal of the
   * constraint and coefficients[i] its coefficients. The signed representation
   * is as follow: for a 0-based variable index x, (x + 1) represents the
   * variable x and -(x + 1) represents its negation.
   * Note that the same variable shouldn't appear twice and that zero
   * coefficients are not allowed.
   * </pre>
   *
   * <code>repeated int32 literals = 1;</code>
   * @param index The index of the element to return.
   * @return The literals at the given index.
   */
  int getLiterals(int index);

  /**
   * <code>repeated int64 coefficients = 2;</code>
   * @return A list containing the coefficients.
   */
  java.util.List<java.lang.Long> getCoefficientsList();
  /**
   * <code>repeated int64 coefficients = 2;</code>
   * @return The count of coefficients.
   */
  int getCoefficientsCount();
  /**
   * <code>repeated int64 coefficients = 2;</code>
   * @param index The index of the element to return.
   * @return The coefficients at the given index.
   */
  long getCoefficients(int index);

  /**
   * <pre>
   * Optional lower (resp. upper) bound of the constraint. If not present, it
   * means that the constraint is not bounded in this direction. The bounds
   * are INCLUSIVE.
   * </pre>
   *
   * <code>optional int64 lower_bound = 3;</code>
   * @return Whether the lowerBound field is set.
   */
  boolean hasLowerBound();
  /**
   * <pre>
   * Optional lower (resp. upper) bound of the constraint. If not present, it
   * means that the constraint is not bounded in this direction. The bounds
   * are INCLUSIVE.
   * </pre>
   *
   * <code>optional int64 lower_bound = 3;</code>
   * @return The lowerBound.
   */
  long getLowerBound();

  /**
   * <code>optional int64 upper_bound = 4;</code>
   * @return Whether the upperBound field is set.
   */
  boolean hasUpperBound();
  /**
   * <code>optional int64 upper_bound = 4;</code>
   * @return The upperBound.
   */
  long getUpperBound();

  /**
   * <pre>
   * The name of this constraint.
   * </pre>
   *
   * <code>optional string name = 5 [default = ""];</code>
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   * <pre>
   * The name of this constraint.
   * </pre>
   *
   * <code>optional string name = 5 [default = ""];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of this constraint.
   * </pre>
   *
   * <code>optional string name = 5 [default = ""];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();
}
